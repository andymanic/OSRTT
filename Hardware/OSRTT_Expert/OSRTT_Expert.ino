#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C 
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
#define LOGO_HEIGHT   64
#define LOGO_WIDTH    128
static const unsigned char PROGMEM logo_bmp[] = {
 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 
  0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 
  0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 
  0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x3f, 0xf8, 0x00, 0x7f, 0xe0, 0x1f, 0xff, 0x0f, 0xff, 0xfd, 0xff, 0xff, 0xdf, 0x80, 
  0x07, 0xe0, 0xff, 0xfe, 0x01, 0xff, 0xf8, 0x1f, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x80, 
  0x07, 0xe1, 0xff, 0xff, 0x03, 0xff, 0xf8, 0x1f, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xdf, 0x80, 
  0x07, 0xe3, 0xff, 0xff, 0x03, 0xff, 0xfc, 0x1f, 0xff, 0xe7, 0xff, 0xfc, 0xff, 0xff, 0x9f, 0x80, 
  0x07, 0xe3, 0xc0, 0x0f, 0x83, 0xc0, 0x3c, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x87, 0x80, 0x3c, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x87, 0x80, 0x00, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x83, 0xc0, 0x00, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x83, 0xf0, 0x00, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x83, 0xff, 0xf0, 0x1e, 0x07, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x81, 0xff, 0xf8, 0x1f, 0xff, 0xc0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x80, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x80, 0x00, 0x7c, 0x1f, 0xff, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x80, 0x00, 0x1e, 0x1e, 0x1e, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x80, 0x00, 0x1e, 0x1e, 0x1f, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x87, 0x00, 0x1e, 0x1e, 0x0f, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xc0, 0x07, 0x87, 0x80, 0x1e, 0x1e, 0x0f, 0x80, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe3, 0xe0, 0x1f, 0x07, 0xc0, 0x7c, 0x1e, 0x07, 0xc0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe1, 0xff, 0xff, 0x07, 0xff, 0xfc, 0x1e, 0x03, 0xc0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe1, 0xff, 0xfe, 0x03, 0xff, 0xf8, 0x1e, 0x03, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe0, 0x7f, 0xfc, 0x01, 0xff, 0xf0, 0x1e, 0x01, 0xe0, 0x1e, 0x00, 0x01, 0xe0, 0x1f, 0x80, 
  0x07, 0xe0, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 
  0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 
  0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x80, 
  0x03, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 
  0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
  0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
  0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x07, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00
};

void clearDisplayBuffer() {
  display.clearDisplay();
  display.println(); // empty buffer to save OLED life.
  display.display();
}

void screensaver() {
  
}

void drawSplashScreen(void) {
  display.clearDisplay();

  display.drawBitmap(
    (display.width()  - LOGO_WIDTH ) / 2,
    (display.height() - LOGO_HEIGHT) / 2,
    logo_bmp, LOGO_WIDTH, LOGO_HEIGHT, 1);
  display.display();
  delay(1000);
}

void oledAwaitingSerial(String keyword) {
  display.clearDisplay();

  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE); 
  display.setCursor(0, 0);     
  display.println(F("AWAITING"));
  display.println(F("DESKTOP"));
  display.println(keyword);
  display.println(F("..."));
  display.display();
  delay(100);
}

void oledFourLines(String keyword1, String keyword2, String keyword3, String keyword4) {
  display.clearDisplay();

  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE); 
  display.setCursor(0, 0);     
  display.println(keyword1);
  display.println(keyword2);
  display.println(keyword3);
  display.println(keyword4);
  display.display();
  delay(100);
}

void oledTestRunning(int fromRGB, int toRGB, int runCount) {
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE); 
  display.setCursor(0, 0);     
  display.println(F("RUNNING TEST:"));
  display.setTextSize(2);
  display.print(F("Run "));
  display.println(runCount);
  display.setTextSize(1);
  display.println();
  display.setTextSize(2);
  display.print(F("RGB "));
  display.println(fromRGB);
  display.print(F("RGB "));
  display.println(toRGB);

  display.display();
  //delay(100);
}

void rotateDisplay(int rotation)
{
  // 0 = Standard
  // 1 = Right
  // 2 = Left
  display.setRotation(rotation);
}
